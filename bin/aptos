#!/usr/bin/env node

const { execSync, spawn } = require("child_process");
const fs = require("fs");
const os = require("os");

const PNAME = "aptos-cli";
const VERSION = "2.3.1";

const execSyncShell = (command, options) => {
  return execSync(command, { shell: true, ...options });
}

// Get all arguments passed to the script
const getOS = () => {
  const platform = os.platform();
  switch (platform) {
    case "darwin":
      return "MacOS";
    case "linux":
      return "Ubuntu";
    case "win32":
      return "Windows";
    default:
      throw new Error(`Unsupported OS ${platform}`);
  }
};

// Only works on Unix systems. This is fine because we only need to check for brew on
// MacOS.
const executableIsAvailable = (name) => {
  try {
    execSyncShell(`which ${name}`, { encoding: "utf8" });
    return true;
  } catch (error) {
    return false;
  }
}

const getCliPathBrew = () => {
  const directory = execSyncShell("brew --prefix aptos", { encoding: "utf8" }).toString().trim();
  return `${directory}/bin/aptos`;
}

const main = async () => {
  const os = getOS();
  const binaryName = `${PNAME}-${VERSION}-${os}`;

  let path;
  if (os === "MacOS") {
    // Confirm brew is installed.
    const brewInstalled = executableIsAvailable("brew");
    if (!brewInstalled) {
      throw "Please install brew to continue: https://brew.sh/";
    }
    try {
      // Get the path of where the Aptos stuff is installed, if any.
      path = getCliPathBrew();
    } catch (e) {
      path = "";
    }
  } else {
    path = `${__dirname}/${binaryName}`;
  }

  // If binary does not exist, download it.
  if (!fs.existsSync(path)) {
    const url = `https://github.com/aptos-labs/aptos-core/releases/download/${PNAME}-v${VERSION}/${PNAME}-${VERSION}-${os}-x86_64.zip`;
    if (os === "Windows") {
      console.log(`Downloading aptos CLI version ${VERSION}`);
      execSync(
        `curl -L -o C:/tmp/aptos.zip ${url} & powershell Expand-Archive -Path C:/tmp/aptos.zip -DestinationPath C:/tmp -Force & move C:\\tmp\\aptos.exe ${path}`,
      );
    } else if (os === "MacOS") {
      console.log(`Downloading aptos CLI with brew`);
      // Install the CLI with brew.
      execSyncShell("brew install aptos");
      // Get the path of the CLI
      path = getCliPathBrew();
    } else {
      console.log(`Downloading aptos CLI version ${VERSION}`);
      execSync(
        `curl -L -o /tmp/aptos.zip ${url}; unzip -o -q /tmp/aptos.zip -d /tmp; mv /tmp/aptos ${path};`,
      );
    }
  }

  // Spawn a child process to execute the binary with the provided arguments.
  spawn(path, process.argv.slice(2), {
    stdio: "inherit",
  });
};

main().catch(console.error);
